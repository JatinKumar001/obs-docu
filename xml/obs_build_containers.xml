<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<chapter version="5.1" xml:id="cha.obs.build_containers"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" >
 <title>Build Containers</title>
 <info>
  <abstract>
   <para/>
   <remark>TBD</remark>
  </abstract>
 </info>
 <para> Containers are workloads which container all necessary files to make
  the workload independent of the running host OS. This includes (but is not
  limited to) libraries, executables and shared resource files. </para>

 <sect1>
  <title>Supported Containers</title>
  <para> A container that is providing its own kernel is called virtual machine
   in this book. Open Build Service (OBS) supports container builds either by
   supporting the native build format or as side product of a different format.
   The range is from very simple chroot containers via server format (for example,
   Docker) or desktop format (for example, AppImage or Snap) up to full VM builds
   (such as for OpenStack, KVM, or as a LiveCD via kiwi). </para>

  <variablelist>
   <varlistentry>
    <term>SimpleImage</term>
    <listitem>
     <para> SimpleImage is a special format which is using rpm spec file syntax
    and just packages the resulting install root as tar ball or squashfs image.
    The format is just using the BuildRequires tags inside of a file called
    "simpleimage", it supports also rpm macro handling to allow to define
    exceptions depending on the build environment. </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Docker</term>
    <listitem>
     <para>Docker images are currently only supported via the &kiwi; tool.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>AppImage</term>
    <listitem>
     <para>The desktop-oriented AppImage format is currently only created as a
    side effect of an RPM build. Open Build Service (OBS) supports signing and
    publishing the .AppImage files, the rest is handled via wrapper packages
    which converts an RPM (or DEB package) into an AppImage file. Own build
    rules can provided via a <filename>Recipe</filename> file, fallback code
    will be used if no <filename>Recipe</filename> file is available.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Snap</term>
    <listitem>
     <para>
     The Snap format is supported natively. However, external resources are
     only supported via source services and therefore not all build types are
     supported. Snapcraft only works with Ubuntu-based base systems.
     (Code to support &rpmf;-based distributions exists as well but has not
     been merged upstream yet.)
    </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Flatpak</term>
    <listitem>
     <para>Flatpak is currently not supported due to the lack of
    reproducible builds.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Livebuild</term>
    <listitem>
     <para>Livebuild is the Debian livebuild support for ISO images.</para>
    </listitem>
   </varlistentry>
  </variablelist>

<!--  <sect2>
   <title>&kiwi; Appliance Formats</title>
   <para> </para>
  </sect2>
  <sect2>
   <title>&kiwi; Product Builds</title>
   <para> </para>
  </sect2>-->
 </sect1>
</chapter>
